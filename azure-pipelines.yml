# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pr:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  RUNTIME: 'win-x64'
  FRAMEWORK: 'net8.0'
  APPNAME: $[split(Build.Repository.Name, '/')[1]]
  BRANCH: $(Build.SourceBranchName)

steps:
- task: PowerShell@2
  displayName: Read Vars
  inputs:
    targetType: 'inline'
    script: |
      $VERSION = Get-Content -Path VERSION -Raw
      $VERSION = $VERSION.Trim()
      Write-Host "##vso[task.setvariable variable=VERSION;]$VERSION"

      $DESCRIPTION = Get-Content -Path DESCRIPTION -Raw
      $DESCRIPTION = $DESCRIPTION.Trim()
      Write-Host "##vso[task.setvariable variable=DESCRIPTION;]$DESCRIPTION"

      $AUTHORS = Get-Content -Path AUTHORS -Raw
      $AUTHORS = $AUTHORS.Trim()
      Write-Host "##vso[task.setvariable variable=AUTHORS;]$AUTHORS"
      
      $LICENSE = Get-Content -Path LICENSE -Raw
      $LICENSE = $LICENSE.Trim()
      Write-Host "##vso[task.setvariable variable=LICENSE;]$LICENSE"

      $YEAR = Get-Date -Format "yyyy"
      Write-Host "##vso[task.setvariable variable=YEAR;]$YEAR"

- script: dotnet tool update dotnet-script --global
  displayName: Install dotnet-script

- script: dotnet tool update dotnet-coverage --global
  displayName: Install dotnet-coverage

- script: dotnet tool update dotnet-sonarscanner --global
  displayName: Install dotnet-sonarscanner

- script: dotnet restore --nologo --verbosity normal --runtime $(RUNTIME)
  displayName: Restore

- script: dotnet build --nologo --verbosity normal --no-restore --no-incremental --configuration $(buildConfiguration) --runtime $(RUNTIME) --framework $(FRAMEWORK)
  displayName: Build

- script: dotnet-coverage collect "dotnet test --nologo --verbosity normal --no-build" -f xml -o "coverage.xml"
  displayName: Test

- script: dotnet publish $(APPNAME)/$(APPNAME).csproj --nologo --verbosity normal --no-build --self-contained --configuration $(buildConfiguration) --runtime $(RUNTIME) --framework $(FRAMEWORK) --output ./publish
  displayName: Publish

- script: >
    makensis
    /DNAME="$(APPNAME)"
    /DINSTALLERNAME="setup-$(APPNAME)-$(BRANCH)-$(VERSION)-$(RUNTIME).exe"
    /DPLATFORM="$(AUTHORS)"
    /DAUTHORS="$(AUTHORS)"
    /DVERSION="$(VERSION)"
    /DDESCRIPTION="$(DESCRIPTION)"
    /DLICENSE="$(LICENSE)"
    /DCOPYRIGHT="$(AUTHORS) Â© $(YEAR)"
    /DYEAR="$(YEAR)"
    /DMAIN_APP_EXE="$(AUTHORS).$(APPNAME).exe"
    /DWEB_SITE="$(Build.Repository.Uri)"
    /DPUBLISH_PATH="$(APPNAME)/publish"
    setup.nsi
  displayName: Create Installer
  